if (faceDescriptors.Count > 0)
            {
                m_FaceTracking.interactable = true;
                #if UNITY_IOS
                    m_FaceBlendShapes.interactable = true;
                #endif
                #if UNITY_ANDROID
                    m_FaceRegions.interactable = true;
                #endif
                foreach (var faceDescriptor in faceDescriptors)
                {
                    if (faceDescriptor.supportsEyeTracking)
                    {
                        m_EyePoses.interactable = true;
                        m_FixationPoint.interactable = true;
                        m_EyeLasers.interactable = true;
                        break;
                    }
                }
            }

            if (occlusionDescriptors.Count > 0)
            {
                foreach (var occlusionDescriptor in occlusionDescriptors)
                {
                    if (occlusionDescriptor.environmentDepthImageSupported != Supported.Unsupported ||
                        occlusionDescriptor.humanSegmentationDepthImageSupported != Supported.Unsupported ||
                        occlusionDescriptor.humanSegmentationStencilImageSupported != Supported.Unsupported)
                    {
                        m_Depth.interactable = true;
                    }
                }
            }

            if (bodyTrackingDescriptors.Count > 0)
            {
                foreach (var bodyTrackingDescriptor in bodyTrackingDescriptors)
                {
                    if (bodyTrackingDescriptor.supportsHumanBody2D || bodyTrackingDescriptor.supportsHumanBody3D)
                    {
                        m_BodyTracking.interactable = true;
                    }
                }
            }

            if (cameraDescriptors.Count > 0)
            {
                m_LightEstimation.interactable = true;
                foreach (var cameraDescriptor in cameraDescriptors)
                {
                    if ((cameraDescriptor.supportsAverageBrightness || cameraDescriptor.supportsAverageIntensityInLumens) &&
                        (cameraDescriptor.supportsAverageColorTemperature || cameraDescriptor.supportsColorCorrection) && cameraDescriptor.supportsCameraConfigurations &&
                        cameraDescriptor.supportsCameraImage)
                    {
                        m_BasicLightEstimation.interactable = true;
                    }

                    if (cameraDescriptor.supportsFaceTrackingHDRLightEstimation || cameraDescriptor.supportsWorldTrackingHDRLightEstimation)
                    {
                        m_HDRLightEstimation.interactable = true;
                    }

                    m_CameraGrain.interactable = cameraDescriptor.supportsCameraGrain;
                }
            }

            if (imageDescriptors.Count > 0)
            {
                m_ImageTracking.interactable = true;
            }

            if (envDescriptors.Count > 0)
            {
                m_EnvironmentProbes.interactable = true;
            }

            if (planeDescriptors.Count > 0)
            {
                m_PlaneDetection.interactable = true;
                foreach (var planeDescriptor in planeDescriptors)
                {
                    if (planeDescriptor.supportsClassification)
                    {
                        m_PlaneClassification.interactable = true;
                        break;
                    }
                }
            }

            if (anchorDescriptors.Count > 0)
            {
                m_Anchors.interactable = true;
            }

            if (objectDescriptors.Count > 0)
            {
                m_ObjectTracking.interactable = true;
            }

            if (cameraDescriptors.Count > 0)
            {
                foreach (var cameraDescriptor in cameraDescriptors)
                {
                    if (cameraDescriptor.supportsCameraImage)
                    {
                        m_CpuImages.interactable = true;
                        break;
                    }
                }
            }

#if UNITY_IOS
            if(sessionDescriptors.Count > 0 && ARKitSessionSubsystem.worldMapSupported)
            {
                m_ARWorldMap.interactable = true;
            }

            if (sessionDescriptors.Count > 0 && EnableGeoAnchors.IsSupported)
            {
                m_ARKitGeoAnchors.interactable = true;
            }

            if(planeDescriptors.Count > 0 && rayCastDescriptors.Count > 0 && participantDescriptors.Count > 0 && ARKitSessionSubsystem.supportsCollaboration)
            {
                m_ARCollaborationData.interactable = true;
            }

            if(sessionDescriptors.Count > 0 && ARKitSessionSubsystem.coachingOverlaySupported)
            {
                m_ARKitCoachingOverlay.interactable = true;
            }
#endif

            if (depthDescriptors.Count > 0)
            {
                m_PointCloud.interactable = true;
            }

            if (planeDescriptors.Count > 0)
            {
                m_PlaneOcclusion.interactable = true;
            }

            var activeLoader = LoaderUtility.GetActiveLoader();
            if (activeLoader && activeLoader.GetLoadedSubsystem<XRMeshSubsystem>() != null)
            {
                m_Meshing.interactable = true;
            }

#if UNITY_IOS
            m_ThermalStateButton.interactable = true;
#endif // UNITY_IOS